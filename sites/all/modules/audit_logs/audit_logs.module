<?php

/**
 * Implements hook_menu().
 */
/*Post a job screen*/
function audit_logs_menu() {
    $items = array();
    $items['admin/config/people/audit_logs'] = array(
        'title' => 'Audit Logs',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('audit_logs_list',''),
        'access callback' => 'user_access_permissions',
        'access arguments' => array('view_events_news'),
    );  
  return $items;
}


function audit_log($action, $associated){
    global $user;
    if(in_array('faculty_admin', $user->roles))
    {
     $user_info = db_select('ldap_user_info')
            ->fields('ldap_user_info',array('givenname'))
            ->condition('uid', $user->uid, '=')
            ->execute()->fetchAll();
      $name=$user_info[0]->givenname;
    }else if(in_array('faculty', $user->roles))
    {
     $user_info = db_select('ldap_user_info')
            ->fields('ldap_user_info',array('givenname'))
            ->condition('uid', $user->uid, '=')
            ->execute()->fetchAll();
      $name=$user_info[0]->givenname;
    }

    else if(in_array('employer', $user->roles))
    {
       $user_info = db_select('employer_registration')
            ->fields('employer_registration',array('firstname','lastname'))
            ->condition('uid', $user->uid, '=')
            ->execute()->fetchAll();  
       $name=$user_info[0]->firstname." ".$user_info[0]->lastname;
    }
    else if(in_array('student', $user->roles))
    {
       $user_info = db_select('stdinfo')
            ->fields('stdinfo',array('name'))
            ->condition('uid', $user->uid, '=')
            ->execute()->fetchAll();  
       $name=$user_info[0]->name;
    }
   else if(in_array('administrator', $user->roles))
    {      
       $name='administrator';
    }
    $query = db_select('role','r');
        $query->join('users_roles','u','r.rid=u.rid');
        $query->fields('r',array('name'));
        $query->condition('u.uid', $user->uid, '=');
        $role = $query->execute()->fetchAll();
    
     $params = array(
        'uid'=>$user->uid,
        'name'=>isset($name)?$name:'',
        'username'=>$user->name,
        'associated'=>$associated,
        'action'=>$action,
        'role' => $role[0]->name,
        'ip_address' => $_SERVER['REMOTE_ADDR']   
    );
    
    db_insert('audit_logs')
        ->fields($params)
        ->execute();
}

function audit_logs_list($form, &$form_state){
    global $base_url;
    global $user;
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jquery.validate.js');    
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jqueryformvalidation.js');
    drupal_add_js(drupal_get_path('module', 'events_news') .'/js/custom_validations.js');
    drupal_add_css(drupal_get_path('theme', 'bootstrap_business') .'/css/jquery-ui.css');  
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jquery-ui.js');
     drupal_add_js('jQuery(document).ready(function($) {         

        $("#from_date").datepicker({
        changeMonth: true,
        changeYear: true,
        showOn: "both",
        yearRange: "2015:2020",
        dateFormat:"dd/mm/yy",
        buttonImage: "'.file_create_url('public://calendar.gif').'",
        buttonImageOnly: true,
        onSelect: function(selected) {
        }
        });
        
        $("#to_date").datepicker({
        changeMonth: true,
        changeYear: true,
        showOn: "both",
        yearRange: "2015:2020",
        dateFormat:"dd/mm/yy",
        buttonImage: "'.file_create_url('public://calendar.gif').'",
        buttonImageOnly: true,
        onSelect: function(selected) {
        }
        });
        $("#download").click(function() {
         $("#download_csv").val("csv");
         document.getElementById("audit-logs-list").submit();
        });
        });', 'inline');
   
     drupal_add_js('function submit_change(){document.getElementById("download_csv").value=""}','inline');
    $form = array(); 
    
    
    $form['div'] = array(
        '#type' => 'item', 
        '#prefix' => '<div id="logs_list">',
    );
  
     
    $form['div']['name'] = array(
        '#id' => 'name',
        '#title' => 'Name',        
        '#type' => 'textfield',         
        '#default_value' =>'',  
     );
    
    $form['div']['username'] = array(
        '#id' => 'username',
        '#title' => 'Username',        
        '#type' => 'textfield',         
        '#default_value' =>'',  
     );
    $form['div']['role'] = array(
        '#id' => 'role',
        '#title' => 'Role',        
        '#type' => 'select',
        '#options' => array(''=>'Select','faculty'=>'faculty','faculty_admin'=>'faculty_admin','employer'=>'employer','student'=>'student','administrator'=>'administrator'),
        '#default_value' =>'',  
     );
    $form['div']['associated'] = array(
        '#id' => 'associated',
        '#title' => 'Associated with',        
        '#type' => 'textfield',         
        '#default_value' =>'',  
     );
    
    
    $form['div']['date'] = array(
        '#type' => 'item', 
        '#title' => 'Date',
    );
    $form['div']['date']['from_date'] = array(
        '#id' => 'from_date',
        '#title' => 'From',        
        '#type' => 'textfield',   
        '#attributes' => array('readonly'=>'readonly'),
        '#default_value' =>'',  
     );
    
    $form['div']['date']['to_date'] = array(
        '#id' => 'to_date',
        '#title' => 'To',        
        '#type' => 'textfield',   
        '#attributes' => array('readonly'=>'readonly'),
        '#default_value' =>'',  
     ); 
    $form['div']['download_csv'] = array(
      '#type' => 'hidden',
      '#attributes' => array(
        'id' => 'download_csv'
      )
    );
    $form['div']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Search'),
        '#submit' => array('logs_submit'),
        '#prefix' => '<div class="submit_clear_but">',
        '#attributes' => array('onclick' => 'javascript:submit_change();'),
    );

    $form['div']['cancel'] = array(
        '#type' => 'item', 
        '#markup' => t('<a  class="experience_calcel" href="'.$base_url.'/'.get_admin_link().'audit_logs">Clear</a>'),
        '#suffix' => '</div></div>',
    );
    
    
    
    
    $header = array(
        array('data' => t('Name'), 'width' => '10%'), 
        array('data' => t('Username'), 'width' => '10%'),
        array('data' => t('Role'), 'width' => '10%'),
        array('data' => t('Action'), 'width' => '10%'),
        array('data' => t('Associated with'), 'width' => '40%'),
        array('data' => t('Ip Address'), 'width' => '10%'),
        array('data' => t('Date'), 'width' => '10%'),        
    );
    $query = db_select('audit_logs')
    ->fields('audit_logs');
    
    if (isset($form_state['input']['name']) && $form_state['input']['name']!="") {
        $query->condition('name', '%' . db_like($form_state['input']['name']) . '%', 'LIKE');
    }
    
    if (isset($form_state['input']['username']) && $form_state['input']['username']!="") {
        $query->condition('username', '%' . db_like($form_state['input']['username']) . '%', 'LIKE');
    }
    
    if (isset($form_state['input']['role']) && $form_state['input']['role']!="") {
        $query->condition('role', '%' . db_like($form_state['input']['role']) . '%', 'LIKE');
    }
    
    if (isset($form_state['input']['action']) && $form_state['input']['action']!="") {
        $query->condition('action', '%' . db_like($form_state['input']['action']) . '%', 'LIKE');
    }
    
    if (isset($form_state['input']['associated']) && $form_state['input']['associated']!="") {
        $query->condition('associated', '%' . db_like($form_state['input']['associated']) . '%', 'LIKE');
    }
    
    if (isset($form_state['input']['from_date']) && $form_state['input']['from_date']!="") {
        $from_input = explode('/', $form_state['input']['from_date']);
        $fromdate = $from_input[2].'-' .$from_input[1]. '-'.$from_input[0]." ".date("H:i:s");
        $query->condition('cdate',$fromdate, '>=');
    }
    if (isset($form_state['input']['to_date']) && $form_state['input']['to_date']!="") {
        $to_input = explode('/', $form_state['input']['to_date']);
        $todate = $to_input[2].'-'.$to_input[1].'-'.$to_input[0]." ".date("H:i:s");
        $query->condition('cdate',$todate, '<=');
    }
    $table_sort = $query->extend('TableSort')
    ->orderByHeader($header); // Add order by headers.

    $pager = $table_sort->extend('PagerDefault')
        ->orderBy('id', 'DESC');
       if(isset($form_state['values']['download_csv']) && $form_state['values']['download_csv']=='csv')
         $pager->limit(200000000); 
       else
         $pager->limit(10); //10 rows per page.
    
    $result = $pager->execute();
    foreach($result as $row){
        $rows[] = array($row->name,$row->username,$row->role,$row->action,$row->associated,$row->ip_address,date('d F Y',strtotime($row->cdate)));
        $csv_records.=$row->name.",".$row->username.",".$row->role.",".$row->action.",".$row->associated.",".$row->ip_address.",".date('d F Y',strtotime($row->cdate)). "\n";
        }
       
   $form['table'] = array(
      '#theme' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#empty' => t('No Records Found!')
    );    
   
   
   $form['pager'] = array('#markup' => theme('pager')); 
   
   $form['div']['export'] = array(
        '#type' => 'item', 
        '#markup' => t('<a  class="export" id="download">Export to CSV</a>'),
    );
   $_SESSION['csv_records']=$csv_records;
  if(isset($form_state['values']['download_csv']) && $form_state['values']['download_csv']=='csv')
    {
        drupal_add_http_header('Content-Type', 'text/csv; utf-8');
        drupal_add_http_header('Content-Disposition', 'attachment;filename=audit_log.csv');

        $output = '';
        $keys = array(t('Name'), t('Username'), t('Role'), t('Action'), t('Associated'), t('Ip Address'), t('Date'));
        if ($keys) {
          $output .= implode("\t", $keys) . "\n";
        }
        $result = json_decode(base64_decode($res));
        //echo "<pre>";print_r($result);exit;
        
           $output .= $_SESSION['csv_records'];
        
        ob_clean();
        print $output;
        exit;
    }
    
    return $form;
}

function logs_submit($form, &$form_state) {      
    $form_state['rebuild'] = TRUE;
}
