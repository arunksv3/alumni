<?php

/**
 * Implements hook_menu().
 */
/*Post a job screen*/
function faculty_menu() {
    $items = array();
    $items['faculty/account'] = array(
        'title' => 'Update Details',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_myaccount_form',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty'),
        'file' => 'faculty_myaccount_form.inc',
        
    );
    
    $items['admin/config/people/faculty/account'] = array(
        'title' => 'Update Details',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_myaccount_form',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty_admin'),
        'file' => 'faculty_myaccount_form.inc',
        'type' => MENU_SUGGESTED_ITEM
    );
    
    
    $items['faculty/myaccount'] = array(
        'title' => 'My Account',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_updateaccount',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty'),
        'file' => 'faculty_updateaccount.inc'
    );
    
     $items['admin/config/people/faculty/myaccount'] = array(
        'title' => 'My Account',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_updateaccount',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty_admin'),
        'file' => 'faculty_updateaccount.inc'
    );
     
     
    $items['faculty/editaccount'] = array(
        'title' => 'Edit Account',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_editaccount_form',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty'),
        'file' => 'faculty_editaccount_form.inc'       
    );
    
     $items['admin/config/people/faculty/editaccount'] = array(
        'title' => 'Edit Account',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty_editaccount_form',''),
        'access callback' => 'user_has_role',
        'access arguments' => array('faculty_admin'),
        'file' => 'faculty_editaccount_form.inc',
        'type' => MENU_SUGGESTED_ITEM
    );
    
    
    
  /*
    $items['admin/config/people/faculty/list'] = array(
        'title' => 'Faculty List',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('faculty',''),
        'access callback' => 'user_access_permissions',
        'access arguments' => array('faculty_list'),
        'file' => 'faculty.inc'
    );
    
    $items['admin/config/people/approvefaculty/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('approvefaculty',4,5),
        'access callback' => 'user_access_permissions',
        'access arguments' => array('faculty_list'),
     );
    */
  return $items;
}

function faculty_permission() {
  return array(
    'faculty_list' => array(
        'description' => t('Faculty List'),
    ), 
  );
}

function approvefaculty($form, &$form_state,$id,$status){
    global $base_url;
    $decrypting_key=variable_get('IIUM_Encryption_Key', NULL);
    $id=(int)decrypt($id,$decrypting_key);
    $status=(int)decrypt($status,$decrypting_key);

    if($status==0)
       $status = 1;
    else
       $status = 0;
    $params = array(
        'status' => $status,
    );
    db_update('faculty')
    ->fields($params)
    ->condition('id', $id, '=')
    ->execute(); 
    drupal_goto(get_admin_link().'faculty/list');
}




function faculty_form($form, &$form_state){ 
    global $base_url;
    global $user;
    //print_r($user);
    $location_country = 0;
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jquery.validate.js');    
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jqueryformvalidation.js');
    drupal_add_js(drupal_get_path('module', 'faculty') .'/js/custom_validations.js');
    drupal_add_css(drupal_get_path('theme', 'bootstrap_business') .'/css/jquery-ui.css');  
    drupal_add_js(drupal_get_path('theme', 'bootstrap_business') .'/js/jquery-ui.js');
    drupal_add_js('jQuery(document).ready(function($) { 
       
        $("#dob").datepicker({
        changeMonth: true,
        changeYear: true,
        showOn: "both",
        yearRange: "1960:2015",
        buttonImage: "'.file_create_url('public://calendar.gif').'",
        buttonImageOnly: true,
        onSelect: function(selected) {
        }
        }); 
        
        });', 'inline');
 
    $account = user_load($user->uid);    
    if (array_search("administrator", $account->roles)) {
        $q = $_GET['q'];
        $q_arry = explode('/', $q);           
        $user_uid = $q_arry['1'];
    }else{
        $user_uid = $user->uid;
    }
    
    if($user_uid!=0){
        $user_result = userdetails($user_uid);
        extract($user_result);        
        $employer_result = employerdetails($user_uid);
        (!empty($employer_result) ? extract($employer_result) : '' );        
        if(isset($nature_bussiness)){
            $array = explode('|', $nature_bussiness);
            $nature_bussiness = array();
            foreach($array as $key=>$value){
                $nature_bussiness[$value] = $value;
            }
        }
    }else{        
        $nid = 42;
        $node = node_load($nid);
        if($node!=""){
            $nodeView = node_view($node, 'full');
            $message = drupal_render($nodeView['body']);
            $message.= '<div class="mandatory"><span>*</span> Indicates Mandatory</div>';        
            $form['cutomtext'] = array(
                '#type' => 'item',
                '#markup' => $message,
            );  
        }
    }  
    
    if (array_search("administrator", $account->roles)) 
        $suffix = "'#suffix' => '</div>'";
    else
        $suffix = '';
       
    $query = db_select('users_roles', 'u');
    $query->join('role', 'r', 'r.rid = u.rid');
    $query->fields('r');
    $query->condition('u.uid', $user_uid, '=');
    $result = $query->execute()->fetchAll();     
    //$role = $result[0]->name; 
    $email = $user->mail; 
    $user_result = db_select('ldap_user_info')
        ->fields('ldap_user_info')    
        ->condition('uid', $user_uid, '=')
        ->execute();
    $result = $user_result->fetchAssoc();
    $orcldefaultprofilegroup = $result['orcldefaultprofilegroup'];
    $arr = explode(',', $orcldefaultprofilegroup);            
    $cn_arr = explode('=', $arr['0']);
    $cn_value = $cn_arr['1'];
    $user_type_arr = explode('_', $cn_value);   
    $ldap_value = $user_type_arr['1'];
    $ldap_type = $user_type_arr['2'];                        
    $name = $result['givenname'];
     
    $query = db_select('faculty')
        ->fields('faculty')    
        ->condition('uid', $user_uid, '=')
        ->execute();    
    $result = $query->fetchAssoc();
    $dob = date('m/d/Y',strtotime($result['dob']));
    $mobile = $result['mobile'];
    $telephone = $result['telephone'];
    $nationality = $result['nationality'];
    $country = $result['country'];
    $state = $result['state'];
    $photo = $result['photo'];
    $department = $result['department'];
    $physical_department = $result['physical_department'];
    $additional_info = $result['additional_info'];
    if($photo!='')
        $image = ' <img src="'.file_create_url($photo).'"/>';
    else
        $image = '<img src="'.file_create_url('public://uploads/profile_pictures/profile_pic.jpg').'"/>';
    
    
    $query = db_select('users')
        ->fields('users')    
        ->condition('uid', $user_uid, '=')
        ->execute();
    $result = $query->fetchAssoc();
    $username = $result['name'];
    $email = $result['mail'];
   // $form = array();
    /*
    $form['title']= array(
        '#type' => 'item',
        '#markup' => '<h2>Update Details</h2>'
           
    );*/
    
    $form['application_id'] = array(
     '#type' => 'textfield', 
     '#id' => 'application_id',
     '#title' => 'Application ID <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
     '#default_value' => $user_uid   
    );
    
    $form['name'] = array(
     '#type' => 'textfield', 
     '#id' => 'name',
     '#description' => 'this value will be coming from existing database',
     '#title' => 'Name <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
     '#default_value' => $name
    );
    
    $form['username'] = array(
     '#type' => 'textfield', 
     '#id' => 'username',
     '#description' => 'this value will be coming from existing database',        
     '#title' => 'Username <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
     '#default_value' => $username
    );
    
    $form['ldap_value'] = array(
     '#type' => 'textfield', 
     '#id' => 'ldap_value',
     '#description' => 'this value will be coming from existing database',        
     '#title' => 'Ldap Value <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
     '#default_value' => $ldap_value
    );
    
    $form['ldap_type'] = array(
     '#type' => 'textfield', 
     '#id' => 'type',
     '#description' => 'this value will be coming from existing database',        
     '#title' => 'Ldap Type <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
    '#default_value' => $ldap_type
    );
    /*
    $form['role'] = array(
     '#type' => 'textfield', 
     '#id' => 'role',
     '#title' => 'Admin Assigned Role <span class="form-required">*</span>',
     '#attributes' => array('readonly' => 'readonly'),
    );*/
    
    $form['email'] = array(
     '#type' => 'textfield', 
     '#id' => 'email',
        '#attributes' => array('readonly' => 'readonly'),
     '#description' => 'this value will be coming from existing database',        
     '#title' => 'Email <span class="form-required">*</span>',   
        '#default_value' => $email
    );
    
    $form['dob'] = array(
     '#type' => 'textfield', 
     '#id' => 'dob',
     '#title' => 'Date of Birth <span class="form-required">*</span>',
    '#attributes' => array('readonly' => 'readonly'),
    '#default_value' => $dob
    );
    
    $form['photo'] = array(
     '#type' => 'file', 
     '#id' => 'photo',
     '#title' => 'Photo',
    );
    
    $form['image'] = array(
     '#type' => 'item', 
     '#markup' => $image, 
    );
    
    $form['mobile'] = array(
     '#type' => 'textfield', 
     '#id' => 'mobile',
     '#title' => 'Mobile <span class="form-required">*</span>', 
    '#default_value' => $mobile
    );
    
    $form['telephone'] = array(
     '#type' => 'textfield', 
     '#id' => 'telephone',
     '#title' => 'Telephone <span class="form-required">*</span>',   
    '#default_value' => $telephone
    );
    
    $form['nationality'] = array(
     '#type' => 'select', 
     '#options' => array(''=>'Select') + countries_list(),
     '#id' => 'nationality',
     '#title' => 'Nationality <span class="form-required">*</span>',   
    '#default_value' => $nationality
    );
    
    $form['country'] = array(
        '#type' => 'select',
        '#title' => t('Country<span class="form-required">*</span>'),
        '#options' => array(''=>'Select') + countries_list(),
        '#ajax' => array(
            'event' => 'change',
            'callback' => 'employer_registration_state_list_ajax',
            'wrapper' => 'state-list-wrapper',
        ),
        '#default_value' => (isset($form_state['input']['country']) ? $form_state['input']['country'] : $country),
    );
    
    // Wrapper for state dropdown list
    $form['address']['wrapper'] = array(
        '#prefix' => '<div id="state-list-wrapper">',
        '#suffix' => '</div>',
    );
    
    if ((isset($form_state['values']['country']) && $form_state['values']['country'] != "") || $country > 0) {        
        $cid = isset($form_state['values']['country'])?$form_state['values']['country']:$country;        
        $state_list = db_select('states_list')
                ->fields('states_list')
                ->condition('cid', $cid, '=')
                ->execute()
                ->fetchAll();
        $state_list_arr[''] = 'Select';
        foreach ($state_list as $value):
            $state_list_arr[$value->id] = $value->name;
        endforeach;
        if(count($state_list) > 0){
            // Province dropdown list
            $form['address']['wrapper']['state'] = array(
                '#type' => 'select',
                '#title' => t('State<span class="form-required">*</span>'),
                 '#options' => $state_list_arr,
                '#default_value' => (isset($form_state['input']['state']) ? $form_state['input']['state'] : $state),
            );
        }
    }
    
    
    
    $form['department'] = array(
     '#type' => 'textfield', 
     '#id' => 'department',
     '#title' => 'Department <span class="form-required">*</span>',   
    '#default_value' => $department
    );
    
    $form['physical_department'] = array(
     '#type' => 'textfield', 
     '#id' => 'physical_department',
     '#title' => 'Physical Department <span class="form-required">*</span>',   
        '#default_value' => $physical_department
    );
    
    $form['additional_info'] = array(
     '#type' => 'textarea', 
     '#id' => 'additional_info',
     '#title' => 'Additional Info <span class="form-required">*</span>',   
    '#default_value' => $additional_info
    );
    
    $form['uid'] = array(
     '#type' => 'hidden', 
     '#id' => 'uid',     
     '#default_value' => $user_uid
    );
    
    $form['#attributes'] = array('enctype' => 'multipart/form-data');
    
    return $form;        
}

function faculty_profile_form_submit($form, &$form_state){    
    extract($form_state['input']);   
    if(!isset($state) || $state=='')
        $state = 0;
    
    $date = explode('/', $dob);
    $dob = $date[2].'-'.$date[0].'-'.$date[1];
    
    $arr = array(
           'email' => $email,
           'name' => $name,
           'username' => $username,
           'ldap_value' => $ldap_value,
           'ldap_type' => $ldap_type,
           'dob' => $dob,
           'mobile' => $mobile,
           'telephone' => $telephone,            
           'nationality' => $nationality,
           'country' => $country,
           'state' => $state,            
           'additional_info' => $additional_info,
           'department' => $department,
           'physical_department' => $physical_department, 
    );
    
    if (isset($_FILES["files"]["name"]['photo']) && $_FILES["files"]["name"]['photo'] != '') {
        $photo_name = $_FILES["files"]["name"]['photo'];
        // Move files to destination folder
        $photo_temp = $_FILES["files"]["tmp_name"]['photo'];
        $photo = time() . '_' . $photo_name;
        $dest_photo = 'public://uploads/profile_pictures/' . $photo;
        move_uploaded_file($photo_temp, $dest_photo);
        $arr['photo'] = $dest_photo;
    }

    
    $query = db_select('faculty')
        ->fields('faculty')    
        ->condition('uid', $uid, '=')
        ->execute();    
    $count = $query->rowCount(); 
    if($count>0){        
        db_update('faculty')
        ->fields($arr)
        ->condition('uid', $uid, '=')
        ->execute();  
    } else {
        $arr['uid'] = $uid;
        $arr['cdate'] = date('Y-m-d H:i:s');
        db_insert('faculty')
        ->fields($arr)
         ->execute();
    }
}

/* To remove admin menu for faculty admin popup pages */
function faculty_page_alter(&$page){
    $path = current_path();
    if(strpos($path,'viewnews')!=false || strpos($path,'viewevent')!=false || strpos($path,'view_tip')!=false || strpos($path,'latestresume')!=false){
        unset($page['page_bottom']); 
        unset($page['#theme_wrappers']);     
        unset($page['#show_messages']); 
        unset($page['#post_render']); 
        unset($page['#theme']);  
    }
}